import { useEffect, useState, useRef } from "react";
import filter from '../../resources/icons/filter.svg';
import './StatusFilter.scss'

const StatusFilter = (props) => {
    const [isFilterWindowVisible, showFilterWindow] = useState(false);
    const [statusName, setStatus] = useState('');
    const [statusesComponents, setComponents] = useState();

    const menuRef = useRef();
    useEffect(() => {
        let handler = (event) => {
            if (!menuRef.current.contains(event.target)) {
                showFilterWindow(false);
            }
        };
        document.addEventListener("mousedown", handler);
        return () => {
            document.removeEventListener("mousedown", handler);
        }
    });

    const statuses = [
        { name: '–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã', emoji: 'üí≠', color: '#000000', id: "62f0d315ed8a0bc438b4b600" },
        { name: '–û—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–∏–∑–∞–π–Ω–∞', emoji: 'üé®', color: '#000000', id: "6307603a9242b63c06acaa32" },
        { name: '–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∏–∑–∞–π–Ω–∞', emoji: 'üìí', color: '#000000', id: "62f0d3aded8a0bc438b4b613" },
        { name: '–°—Ç–∞—Ä—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', emoji: 'üë®‚Äçüíª', color: '#000000', id: "62f0d3d8ed8a0bc438b4b614" },
        { name: '–ì–æ—Ä–∏—Ç', emoji: 'üî•', color: '#f44336', id: "62f0d403ed8a0bc438b4b615" },
        { name: '–ñ–¥–µ–º –û–° –∫–ª–∏–µ–Ω—Ç–∞', emoji: '‚è≥', color: '#000000', id: "62f0d410ed8a0bc438b4b616" },
        { name: '–ü–∏—à–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é', emoji: 'üìÉ', color: '#000000', id: "62f0d42bed8a0bc438b4b617" },
        { name: '–í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', emoji: '‚å®Ô∏è', color: '#000000', id: "62f0d453ed8a0bc438b4b618" },
        { name: '–í–Ω–æ—Å–∏–º –ø—Ä–∞–≤–∫–∏', emoji: '‚úçÔ∏è', color: '#000000', id: "62f0d469ed8a0bc438b4b619" },
        { name: '–†–µ–∫–ª–∞–º–∞', emoji: 'üîà', color: '#000000', id: "62f0d47fed8a0bc438b4b61a" },
        { name: '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞', emoji: 'üñ•', color: '#000000', id: "62f0d493ed8a0bc438b4b61b" },
        { name: '–ó–∞–∫—Ä—ã—Ç', emoji: '‚úÖ', color: '#49bd16', id: "62f0d4a8ed8a0bc438b4b61c" },
        { name: '–û—Ç–¥–∞—Ç—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É', emoji: 'üì§', color: '#000000', id: "62f0d4b6ed8a0bc438b4b61d" },
        { name: '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤ –¥–æ–ø. –ø—Ä–æ–¥–∞–∂—É', emoji: 'üíµ', color: '#000000', id: "62f0d4c5ed8a0bc438b4b61e" },
        { name: '–ñ–¥–µ–º –æ–ø–ª–∞—Ç—É', emoji: 'üí∞', color: '#49bd16', id: "62f0d4d8ed8a0bc438b4b61f" },
        { name: '–û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç', emoji: 'üó£', color: '#000000', id: "62f0d4fced8a0bc438b4b621" },
        { name: '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', emoji: '‚õîÔ∏è', color: '#f44336', id: "62f0d50ced8a0bc438b4b622" }]

    const getData = async () => {

        let newData = statuses.map(status => {
            return (
                <div className="Status" key={status.id} status={status.name} id={status.id} onClick={(e) => {
                    setStatus(e.currentTarget.getAttribute('status'));
                    props.setFilter(e.currentTarget.getAttribute('id'));
                }}>
                    <span>{status.name + ' '}</span>
                    <span>{status.emoji}</span>
                </div>
            )
        });
        setComponents(newData);
    }

    useEffect(() => {
        getData();
    }, [])

    return (
        <div className='FilterButton' ref={menuRef} onClick={() => { showFilterWindow(!isFilterWindowVisible) }}>
            {statusName !== '' ?
                <p>{statusName}</p> :
                <p>–°—Ç–∞—Ç—É—Å</p>}
            <img alt="" src={filter} />
            <div onBlur={() => { showFilterWindow(false) }} className={isFilterWindowVisible ? "statusesList-visible" : "statusesList-hidden"}>
                <div className="Status" onClick={() => { props.setFilter('no-filter'); setStatus('') }}>
                    <p>No filter</p>
                </div>
                {statusesComponents}
            </div>
        </div>
    )
}

export default StatusFilter;